// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectsDocumentation.BlazorWebApp.DbContext;

#nullable disable

namespace ProjectsDocumentation.BlazorWebApp.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.Endpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("EndpointUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("MethodId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ProjectModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MethodId");

                    b.HasIndex("ProjectModelId", "EndpointUrl", "MethodId")
                        .IsUnique();

                    b.ToTable("Endpoints", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointReflection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EndpointVersionId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectTableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTableId");

                    b.HasIndex("EndpointVersionId", "ProjectTableId")
                        .IsUnique();

                    b.ToTable("EndpointReflections", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("JSON");

                    b.Property<int>("EndpointVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Headers")
                        .HasColumnType("JSON");

                    b.Property<string>("QueryParameters")
                        .HasColumnType("JSON");

                    b.HasKey("Id");

                    b.HasIndex("EndpointVersionId");

                    b.ToTable("EndpointRequests", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndpointResponseData")
                        .HasColumnType("JSON");

                    b.Property<int>("EndpointVersionId")
                        .HasColumnType("int");

                    b.Property<int>("StatusCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EndpointVersionId");

                    b.HasIndex("StatusCodeId");

                    b.ToTable("EndpointResponses", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("EndpointId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EndpointId", "Version")
                        .IsUnique();

                    b.ToTable("EndpointVersions", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.LookupTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("LookupTitles", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.LookupValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LookupTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LookupTitleId", "Value")
                        .IsUnique();

                    b.ToTable("LookupValues", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectName")
                        .IsUnique();

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.ProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ModelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelTypeId");

                    b.HasIndex("ProjectId", "ModelName", "ModelTypeId")
                        .IsUnique();

                    b.ToTable("ProjectModels", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.ProjectTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId", "TableName")
                        .IsUnique();

                    b.ToTable("ProjectTables", (string)null);
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.Endpoint", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.LookupValue", "Method")
                        .WithMany("EndpointsAsMethod")
                        .HasForeignKey("MethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.ProjectModel", "ProjectModel")
                        .WithMany("Endpoints")
                        .HasForeignKey("ProjectModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");

                    b.Navigation("ProjectModel");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointReflection", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.EndpointVersion", "EndpointVersion")
                        .WithMany("EndpointReflections")
                        .HasForeignKey("EndpointVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.ProjectTable", "ProjectTable")
                        .WithMany("EndpointReflections")
                        .HasForeignKey("ProjectTableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EndpointVersion");

                    b.Navigation("ProjectTable");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointRequest", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.EndpointVersion", "EndpointVersion")
                        .WithMany("EndpointRequests")
                        .HasForeignKey("EndpointVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EndpointVersion");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointResponse", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.EndpointVersion", "EndpointVersion")
                        .WithMany("EndpointResponses")
                        .HasForeignKey("EndpointVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.LookupValue", "StatusCode")
                        .WithMany("EndpointResponses")
                        .HasForeignKey("StatusCodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EndpointVersion");

                    b.Navigation("StatusCode");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointVersion", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.Endpoint", "Endpoint")
                        .WithMany("EndpointVersions")
                        .HasForeignKey("EndpointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.LookupValue", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.LookupTitle", "LookupTitle")
                        .WithMany("LookupValues")
                        .HasForeignKey("LookupTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookupTitle");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.ProjectModel", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.LookupValue", "ModelType")
                        .WithMany("ProjectModels")
                        .HasForeignKey("ModelTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.Project", "Project")
                        .WithMany("ProjectModels")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelType");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.ProjectTable", b =>
                {
                    b.HasOne("ProjectsDocumentation.BlazorWebApp.Entities.Project", "Project")
                        .WithMany("ProjectTables")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.Endpoint", b =>
                {
                    b.Navigation("EndpointVersions");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.EndpointVersion", b =>
                {
                    b.Navigation("EndpointReflections");

                    b.Navigation("EndpointRequests");

                    b.Navigation("EndpointResponses");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.LookupTitle", b =>
                {
                    b.Navigation("LookupValues");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.LookupValue", b =>
                {
                    b.Navigation("EndpointResponses");

                    b.Navigation("EndpointsAsMethod");

                    b.Navigation("ProjectModels");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.Project", b =>
                {
                    b.Navigation("ProjectModels");

                    b.Navigation("ProjectTables");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.ProjectModel", b =>
                {
                    b.Navigation("Endpoints");
                });

            modelBuilder.Entity("ProjectsDocumentation.BlazorWebApp.Entities.ProjectTable", b =>
                {
                    b.Navigation("EndpointReflections");
                });
#pragma warning restore 612, 618
        }
    }
}
